version: "3.8"
services:
  zookeeper:
    image: "bitnami/zookeeper:latest"
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: "bitnami/kafka:latest"
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami
    depends_on:
      - zookeeper

  webserver1:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/prod1.html:/usr/share/nginx/html/index.html

  webserver2:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/prod2.html:/usr/share/nginx/html/index.html

  webserver3:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/prod3.html:/usr/share/nginx/html/index.html

  nginx-loadbalancer:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx-loadbalancer/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - webserver1
      - webserver2
      - webserver3

  node-app:
    build: .
    depends_on:
      - mongo
      - kafka

  mongo:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=abhishek
      - MONGO_INITDB_ROOT_PASSWORD=mypassword
    ports:
      - "27017:27017"
    volumes:
      - mongo_db:/data/db

volumes:
  zookeeper_data:
  kafka_data:
  mongo_db:
